[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "vbig"
dynamic = ["version"]
description = "Variance-Based Integrated Gradients for Robust Natural Language Inference"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Julian Weaver", email = "julian.weaver@utexas.edu"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "captum>=0.5.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "nltk>=3.7",
    "tqdm>=4.62.0",
    "evaluate>=0.2.0",
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.812",
    "pre-commit>=2.15",
]
wandb = ["wandb>=0.12"]
viz = ["seaborn>=0.11"]

[project.scripts]
vbig-train = "examples.train_vbig_model:main"
vbig-analyze = "examples.analyze_attributions:main"
vbig-compare = "examples.compare_models:main"

[tool.setuptools]
packages = ["vbig", "vbig.attribution", "vbig.training", "vbig.data", "vbig.evaluation", "vbig.visualization"]

[tool.setuptools_scm]
write_to = "vbig/_version.py"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Allow untyped defs for now
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["vbig"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]